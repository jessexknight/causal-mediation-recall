Thu 16 May 2024 07:50:33 AM BST
Wrote profile results to run.py.lprof
Timer unit: 1 s

Total time: 0.001888 s
File: /home/jesse/sci/proj/cmr/code/model/net.py
Function: __init__ at line 5

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     5                                             @profile
     6                                             def __init__(self,i,N,age,ptr_max,ptr_r0,cdm_p0,dep_r0,dep_x0,vio_r0):
     7       224          0.0      0.0      7.4      self.i = i
     8       224          0.0      0.0      5.2      self.N = N
     9       224          0.0      0.0      4.3      self.age = age
    10       224          0.0      0.0      4.6      self.ptr_max = ptr_max
    11       224          0.0      0.0      4.9      self.ptr_r0 = ptr_r0
    12       224          0.0      0.0      3.8      self.cdm_p0 = cdm_p0
    13       224          0.0      0.0      4.6      self.dep_r0 = dep_r0
    14       224          0.0      0.0      4.1      self.dep_x0 = dep_x0
    15       224          0.0      0.0      3.2      self.vio_r0 = vio_r0
    16       224          0.0      0.0     11.8      self.P = set()
    17       224          0.0      0.0     24.8      self.logs = {y:[] for y in model.logs}
    18       224          0.0      0.0      7.6      self.rpp = N.P['rng']['ptr'].poisson
    19       224          0.0      0.0      5.0      self.rpi = N.P['rng']['ind'].poisson
    20       224          0.0      0.0      3.9      self.depressed = False
    21       224          0.0      0.0      4.9      self.active = True

Total time: 0.000354 s
File: /home/jesse/sci/proj/cmr/code/model/net.py
Function: exit at line 29

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    29                                             @profile
    30                                             def exit(self,z):
    31        99          0.0      0.0     18.1      self.logs['exit'].append(z)
    32        99          0.0      0.0     28.0      for P in [*self.P]:
    33                                                 P.end(z)
    34        99          0.0      0.0     32.5      self.N.I.remove(self)
    35        99          0.0      0.0     11.3      self.N.J.append(self)
    36        99          0.0      0.0     10.2      self.active = False

Total time: 0.270288 s
File: /home/jesse/sci/proj/cmr/code/model/net.py
Function: n_begin_ptr at line 41

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    41                                             @profile
    42                                             def n_begin_ptr(self,z):
    43    194082          0.2      0.0     65.5      n = self.rpp(self.get_ptr_rate(z)*model.dtz)
    44    194082          0.1      0.0     34.5      return min(self.ptr_max-len(self.P),n)*self.active

Total time: 0.045918 s
File: /home/jesse/sci/proj/cmr/code/model/net.py
Function: begin_ptr at line 46

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    46                                             @profile
    47                                             def begin_ptr(self,z,P):
    48     69574          0.0      0.0     53.9      self.logs['begin_ptr'].append(z)
    49     69574          0.0      0.0     46.1      self.P.add(P)

Total time: 0.039937 s
File: /home/jesse/sci/proj/cmr/code/model/net.py
Function: end_ptr at line 51

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    51                                             @profile
    52                                             def end_ptr(self,z,P):
    53     69538          0.0      0.0     56.9      self.logs['end_ptr'].append(z)
    54     69538          0.0      0.0     43.1      self.P.remove(P)

Total time: 0.242703 s
File: /home/jesse/sci/proj/cmr/code/model/net.py
Function: set_dep at line 62

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    62                                             @profile
    63                                             def set_dep(self,z):
    64    194082          0.1      0.0     21.0      if self.depressed:
    65    101045          0.1      0.0     40.1        if self.rpi(self.get_dep_reco(z)*model.dtz)>0:
    66      2955          0.0      0.0      0.6          self.logs['end_dep'].append(z)
    67      2955          0.0      0.0      0.3          self.depressed = False
    68                                               else:
    69     93037          0.1      0.0     37.0        if self.rpi(self.get_dep_rate(z)*model.dtz)>0:
    70      3067          0.0      0.0      0.7          self.logs['begin_dep'].append(z)
    71      3067          0.0      0.0      0.4          self.depressed = True

Total time: 0.250077 s
File: /home/jesse/sci/proj/cmr/code/model/net.py
Function: set_vio at line 76

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    76                                             @profile
    77                                             def set_vio(self,z):
    78    194082          0.2      0.0     68.0      n = self.rpi(self.get_vio_rate(z)*model.dtz)
    79    194082          0.1      0.0     32.0      self.logs['vio'] += [z]*n

Total time: 0.56749 s
File: /home/jesse/sci/proj/cmr/code/model/net.py
Function: __init__ at line 82

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    82                                             @profile
    83                                             def __init__(self,I1,I2,z0,dur):
    84     34787          0.0      0.0      1.6      if I1 == I2: return None # HACK
    85     34787          0.0      0.0      2.0      self.N  = I1.N
    86     34787          0.0      0.0      1.5      self.I1 = I1
    87     34787          0.0      0.0      1.4      self.I2 = I2
    88     34787          0.0      0.0      1.4      self.z0 = z0
    89     34787          0.0      0.0      1.4      self.dur = dur
    90     34787          0.3      0.0     44.2      self.set_cdm(z0)
    91     34787          0.1      0.0     13.2      self.I1.begin_ptr(z0,self)
    92     34787          0.1      0.0     12.7      self.I2.begin_ptr(z0,self)
    93     34787          0.1      0.0     19.1      self.N.add_evt(z0+dur,self.end)
    94     34787          0.0      0.0      1.5      self.active = True

Total time: 0.149873 s
File: /home/jesse/sci/proj/cmr/code/model/net.py
Function: end at line 102

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   102                                             @profile
   103                                             def end(self,z):
   104     34769          0.0      0.0      4.7      if not self.active: return
   105     34769          0.1      0.0     45.3      self.I1.end_ptr(z,self)
   106     34769          0.1      0.0     44.8      self.I2.end_ptr(z,self)
   107     34769          0.0      0.0      5.2      self.active = False

Total time: 0.164177 s
File: /home/jesse/sci/proj/cmr/code/model/net.py
Function: set_cdm at line 109

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   109                                             @profile
   110                                             def set_cdm(self,z):
   111    104361          0.1      0.0     42.4      self.cdm = stats.plogis(0
   112     34787          0.0      0.0     30.2        +.5*stats.qlogis(self.I1.cdm_p0)
   113     34787          0.0      0.0     27.4        +.5*stats.qlogis(self.I2.cdm_p0))

Total time: 0.022773 s
File: /home/jesse/sci/proj/cmr/code/model/net.py
Function: add_evt at line 126

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   126                                             @profile
   127                                             def add_evt(self,z,evt,**kwds):
   128     34787          0.0      0.0     46.9      if z not in self.E: self.E[z] = []
   129     34787          0.0      0.0     53.1      self.E[z].append((evt,kwds))

Total time: 3.70899 s
File: /home/jesse/sci/proj/cmr/code/model/net.py
Function: run at line 131

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   131                                             @profile
   132                                             def run(self,zs):
   133      1821          0.0      0.0      0.0      for z in zs:
   134                                                 # scheduled events
   135     36589          0.0      0.0      0.3        for evt,kwds in self.E.get(z,()):
   136     34769          0.2      0.0      5.9          evt(z=z,**kwds)
   137                                                 # every timestep events
   138      1820          0.9      0.0     24.1        self.age_inds(z)
   139      1820          1.2      0.0     32.5        self.update_inds(z)
   140      1820          1.4      0.0     37.2        self.begin_ptrs(z)
   141         1          0.0      0.0      0.0      return self

Total time: 1.37308 s
File: /home/jesse/sci/proj/cmr/code/model/net.py
Function: begin_ptrs at line 143

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   143                                             @profile
   144                                             def begin_ptrs(self,z):
   145      1820          0.6      0.0     41.5      I = [J for I in self.I for J in [I]*I.n_begin_ptr(z)]
   146      1820          0.0      0.0      0.1      if len(I) % 2:
   147       898          0.0      0.0      0.0        I.pop(-1)
   148      1820          0.0      0.0      0.1      n = int(len(I)/2)
   149      3640          0.7      0.0     50.2      list(map(Partnership,
   150      1820          0.0      0.0      0.1        I[:n],I[n:],[z]*n,
   151      1820          0.1      0.0      8.0        self.P['ptr_dur'].rvs(n)//model.dtz+1,
   152                                               ))

Total time: 0.59175 s
File: /home/jesse/sci/proj/cmr/code/model/net.py
Function: add_inds at line 154

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   154                                             @profile
   155                                             def add_inds(self,n,z=0,ages=None):
   156      1821          0.0      0.0      0.2      self.imax += n
   157      3642          0.0      0.0      1.3      self.I.extend(map(Individual,
   158      1821          0.0      0.0      0.2        range(self.imax-n,self.imax),
   159      1821          0.0      0.0      0.1        [self]*n,
   160      1821          0.0      0.0      0.1        [model.amin]*n if ages is None else ages,
   161      1821          0.1      0.0     23.5        self.P['ptr_max'].rvs(n),
   162      1821          0.1      0.0     15.5        self.P['ptr_r0'].rvs(n),
   163      1821          0.1      0.0     15.4        self.P['cdm_p0'].rvs(n),
   164      1821          0.1      0.0     14.8        self.P['dep_r0'].rvs(n),
   165      1821          0.1      0.0     14.5        self.P['dep_x0'].rvs(n),
   166      1821          0.1      0.0     14.4        self.P['vio_r0'].rvs(n),
   167                                               ))

Total time: 0.769216 s
File: /home/jesse/sci/proj/cmr/code/model/net.py
Function: age_inds at line 169

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   169                                             @profile
   170                                             def age_inds(self,z):
   171      1820          0.0      0.0      0.5      n = self.rpi(len(self.I)*model.dtz/365/model.adur)
   172      1820          0.6      0.0     78.1      self.add_inds(n=n,z=z)
   173    195902          0.0      0.0      5.7      for I in self.I:
   174    194082          0.1      0.0      9.0        I.age += model.dtz/365
   175    194082          0.1      0.0      6.6        if I.age > 50:
   176        99          0.0      0.0      0.1          I.exit(z)

Total time: 1.12052 s
File: /home/jesse/sci/proj/cmr/code/model/net.py
Function: update_inds at line 178

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   178                                             @profile
   179                                             def update_inds(self,z):
   180    195902          0.0      0.0      3.4      for I in self.I:
   181    194082          0.6      0.0     49.2        I.set_dep(z)
   182    194082          0.5      0.0     47.5        I.set_vio(z)

